specVersion: 0.0.4
features:
  - fullTextSearch
  - ipfsOnEthereumContracts
description: TB <=> Kleros Graph
repository: https://github.com/thebadge/thebadge-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: LightGTCRFactory
    network: goerli
    source:
      address: "0x55a3d9bd99f286f1817cafaab124ddddfcb0f314"
      abi: LightGTCRFactory
      startBlock: 8970619
      # startBlock: 7487305
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - MetaEvidence
        - LRegistry
      abis:
        - name: LightGTCRFactory
          file: ./abis/LightGTCRFactory.json
      eventHandlers:
        - event: NewGTCR(indexed address)
          handler: handleNewGTCR
      file: ./src/lightGTCRFactoryMapping.ts
  - kind: ethereum/contract
    name: GTCRFactory
    network: goerli
    source:
      address: "0x9aad77bab5f18165f9ca81da9c3d392d9e382c23"
      abi: GTCRFactory
      startBlock: 7486799
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - MetaEvidence
        - Registry
      abis:
        - name: GTCRFactory
          file: ./abis/GTCRFactory.json
      eventHandlers:
        - event: NewGTCR(indexed address)
          handler: handleNewGTCR
      file: ./src/gTCRFactoryMapping.ts

  - kind: ethereum/contract
    name: TheBadge
    network: goerli
    # network: gnosis
    source:
      address: "0x641dDCeDe396fA1C2B1AF323523508D2f8fd6825" # goerli
      startBlock: 8970616
      # address: "" # gnosis
      # startBlock:  # gnosis
      abi: TheBadge
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - User
        - BadgeModel
      abis:
        - name: TheBadge
          file: ./abis/TheBadge.json
      eventHandlers:
        - event: CreatorRegistered(indexed address,string)
          handler: handleCreatorRegistered
        - event: BadgeModelCreated(indexed uint256,string)
          handler: handleBadgeModelCreated
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleMint
      file: ./src/theBadge.ts

  - kind: ethereum/contract
    name: KlerosController
    network: goerli
    # network: gnosis
    source:
      address: "0x6269Ae4D1Afae6bC88FF6Fbf09137deecB6799c7" # goerli
      startBlock: 8970619
      # address: "" # gnosis
      # startBlock:  # gnosis
      abi: KlerosController
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/kleros.ts
      entities:
        - BadgeModelKlerosMetaData
        - BadgeKlerosMetaData
      abis:
        - name: KlerosController
          file: ./abis/KlerosController.json
        - name: LightGeneralizedTCR
          file: ./abis/LightGeneralizedTCR.json
        - name: Arbitror
          file: ./abis/Arbitror.json
        - name: TheBadge
          file: ./abis/TheBadge.json
      eventHandlers:
        - event: NewKlerosBadgeModel(indexed uint256,indexed address,string)
          handler: handleNewKlerosBadgeModel
        - event: mintKlerosBadge(indexed uint256,string)
          handler: handleMintKlerosBadge

templates:
  - kind: ethereum/contract
    name: LightGeneralizedTCR
    network: goerli
    source:
      abi: LightGeneralizedTCR
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LItem
        - ItemProp,
        - LRequest,
        - LRegistry,
        - MetaEvidence,
        - Arbitrator,
      abis:
        - name: LightGeneralizedTCR
          file: ./abis/LightGeneralizedTCR.json
        - name: IArbitrator
          file: ./abis/IArbitrator.json
      eventHandlers:
        - event: NewItem(indexed bytes32,string,bool)
          handler: handleNewItem
        - event: RequestSubmitted(indexed bytes32,uint256)
          handler: handleRequestSubmitted
        - event: Dispute(indexed address,indexed uint256,uint256,uint256)
          handler: handleRequestChallenged
        - event: ItemStatusChange(indexed bytes32,bool)
          handler: handleStatusUpdated
        - event: Contribution(indexed bytes32,uint256,uint256,indexed address,uint256,uint8)
          handler: handleContribution
        - event: MetaEvidence(indexed uint256,string)
          handler: handleMetaEvidence
          # TODO Maybe re-enable as this creates new evidences items
        #        - event: Evidence(indexed address,indexed uint256,indexed address,string)
        #          handler: handleEvidence
        - event: Ruling(indexed address,indexed uint256,uint256)
          handler: handleRuling
      file: ./src/lightGeneralizedTCRMapping.ts
  - kind: ethereum/contract
    name: LIArbitrator
    network: goerli
    source:
      abi: IArbitrator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Arbitrator
      abis:
        - name: IArbitrator
          file: ./abis/IArbitrator.json
        - name: LightGeneralizedTCR
          file: ./abis/LightGeneralizedTCR.json
      eventHandlers:
        - event: AppealPossible(indexed uint256,indexed address)
          handler: handleAppealPossible
      file: ./src/lightGeneralizedTCRMapping.ts
  - kind: ethereum/contract
    name: GeneralizedTCR
    network: goerli
    source:
      abi: GeneralizedTCR
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Item
        - Request
        - Registry
        - MetaEvidence
        - Arbitrator
      abis:
        - name: GeneralizedTCR
          file: ./abis/GeneralizedTCR.json
        - name: IArbitrator
          file: ./abis/IArbitrator.json
      eventHandlers:
        - event: ItemStatusChange(indexed bytes32,indexed uint256,indexed uint256,bool,bool)
          handler: handleRequestResolved
        - event: RequestEvidenceGroupID(indexed bytes32,indexed uint256,indexed uint256)
          handler: handleRequestSubmitted
        - event: Dispute(indexed address,indexed uint256,uint256,uint256)
          handler: handleRequestChallenged

        #        - event: MetaEvidence(indexed uint256,string)
        #          handler: handleMetaEvidence
        #        - event: Evidence(indexed address,indexed uint256,indexed address,string)
        #          handler: handleEvidence
        - event: Ruling(indexed address,indexed uint256,uint256)
          handler: handleRuling
      file: ./src/generalizedTCRMapping.ts
  - kind: ethereum/contract
    name: IArbitrator
    network: goerli
    source:
      abi: IArbitrator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Item
        - Request
        - Round
        - Registry
        - MetaEvidence
        - Arbitrator
      abis:
        - name: IArbitrator
          file: ./abis/IArbitrator.json
        - name: GeneralizedTCR
          file: ./abis/GeneralizedTCR.json
      eventHandlers:
        - event: AppealPossible(indexed uint256,indexed address)
          handler: handleAppealPossible
      file: ./src/generalizedTCRMapping.ts
  - kind: ethereum/contract
    name: TBLightGeneralizedTCR
    network: goerli
    source:
      abi: LightGeneralizedTCR
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/kleros.ts
      entities:
        - BadgeModelKlerosMetaData
      abis:
        - name: LightGeneralizedTCR
          file: ./abis/LightGeneralizedTCR.json
      eventHandlers:
        - event: ItemStatusChange(indexed bytes32,bool)
          handler: handleItemStatusChange
        - event: Dispute(indexed address,indexed uint256,uint256,uint256)
          handler: handleDispute
